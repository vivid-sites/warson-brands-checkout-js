{"version":3,"file":"123-95235528.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/order/mapFromCustom.tsx","webpack://checkout/./packages/core/src/app/order/getOrderSummaryItemImage.tsx","webpack://checkout/./packages/core/src/app/order/mapFromDigital.tsx","webpack://checkout/./packages/core/src/app/order/mapFromGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/order/mapFromPhysical.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItem.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItems.tsx","webpack://checkout/./packages/core/src/app/order/removeBundledItems.ts","webpack://checkout/./packages/core/src/app/order/OrderSummaryTotal.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isSmallScreen.ts","webpack://checkout/./packages/core/src/app/order/isOrderFee.ts","webpack://checkout/./packages/core/src/app/order/OrderSummaryDiscount.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySubtotals.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySection.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryPrice.tsx","webpack://checkout/./packages/core/src/app/order/getItemsCount.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronUp.tsx"],"sourcesContent":["import { CustomItem } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromCustom(item: CustomItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        name: item.name,\n    };\n}\n\nexport default mapFromCustom;\n","import { DigitalItem, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode } from 'react';\n\nexport default function getOrderSummaryItemImage(item: DigitalItem | PhysicalItem): ReactNode {\n    if (!item.imageUrl) {\n        return;\n    }\n\n    return <img alt=\"\" data-test=\"cart-item-image\" src={item.imageUrl} />;\n}\n","import { DigitalItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemOption, OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromDigital(item: DigitalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedComparisonPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        productOptions: [\n            ...(item.options || []).map((option) => ({\n                testId: 'cart-item-product-option',\n                content: `${option.name} ${option.value}`,\n            })),\n            getDigitalItemDescription(item),\n        ],\n    };\n}\n\nfunction getDigitalItemDescription(item: DigitalItem): OrderSummaryItemOption {\n    if (!item.downloadPageUrl) {\n        return {\n            testId: 'cart-item-digital-product',\n            content: <TranslatedString id=\"cart.digital_item_text\" />,\n        };\n    }\n\n    return {\n        testId: 'cart-item-digital-product-download',\n        content: (\n            <a href={item.downloadPageUrl} rel=\"noopener noreferrer\" target=\"_blank\">\n                <TranslatedString id=\"cart.downloads_action\" />\n            </a>\n        ),\n    };\n}\n\nexport default mapFromDigital;\n","import { GiftCertificateItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { IconGiftCertificate } from '../ui/icon';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromGiftCertificate(item: GiftCertificateItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: 1,\n        amount: item.amount,\n        name: item.name,\n        image: (\n            <span className=\"productImage-giftCertificate\" data-test=\"cart-item-gift-certificate\">\n                <IconGiftCertificate />\n            </span>\n        ),\n    };\n}\n\nexport default mapFromGiftCertificate;\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromPhysical(item: PhysicalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedComparisonPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        description: item.giftWrapping ? item.giftWrapping.name : undefined,\n        productOptions: (item.options || []).map((option) => ({\n            testId: 'cart-item-product-option',\n            content: `${option.name} ${option.value}`,\n        })),\n    };\n}\n\nexport default mapFromPhysical;\n","import classNames from 'classnames';\nimport { isNumber } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryItemProps {\n    id: string | number;\n    amount: number;\n    quantity: number;\n    name: string;\n    amountAfterDiscount?: number;\n    image?: ReactNode;\n    description?: ReactNode;\n    productOptions?: OrderSummaryItemOption[];\n}\n\nexport interface OrderSummaryItemOption {\n    testId: string;\n    content: ReactNode;\n}\n\nconst OrderSummaryItem: FunctionComponent<OrderSummaryItemProps> = ({\n    amount,\n    amountAfterDiscount,\n    image,\n    name,\n    productOptions,\n    quantity,\n    description,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    return (\n        <div className=\"product\" data-test=\"cart-item\">\n            <figure className=\"product-column product-figure\">{image}</figure>\n\n            <div className=\"product-column product-body\">\n                <h4\n                    className={classNames('product-title optimizedCheckout-contentPrimary',\n                        { 'body-medium': newFontStyle })}\n                    data-test=\"cart-item-product-title\"\n                >\n                    {newFontStyle\n                        ? (<span className=\"body-bold\">\n                            {`${quantity} x `}\n                        </span>)\n                        : (`${quantity} x `)\n                    }\n                    {name}\n                </h4>\n                {productOptions && productOptions.length > 0 && (\n                    <ul\n                        className={classNames('product-options optimizedCheckout-contentSecondary', {\n                            'sub-text-medium': newFontStyle,\n                        })}\n                        data-test=\"cart-item-product-options\"\n                    >\n                        {productOptions.map((option, index) => (\n                            <li className=\"product-option\" data-test={option.testId} key={index}>\n                                {option.content}\n                            </li>\n                        ))}\n                    </ul>\n                )}\n                {description && (\n                    <div\n                        className=\"product-description optimizedCheckout-contentSecondary\"\n                        data-test=\"cart-item-product-description\"\n                    >\n                        {description}\n                    </div>\n                )}\n            </div>\n\n            <div className=\"product-column product-actions\">\n                {isNumber(amountAfterDiscount) && amountAfterDiscount !== amount && (\n                    <div className={classNames('product-price', {\n                        'body-medium': newFontStyle,\n                    })} data-test=\"cart-item-product-price--afterDiscount\">\n                        <ShopperCurrency amount={amountAfterDiscount} />\n                    </div>\n                )}\n\n                <div\n                    className={classNames('product-price', 'optimizedCheckout-contentPrimary', {\n                        'product-price--beforeDiscount':\n                            isNumber(amountAfterDiscount) && amountAfterDiscount !== amount,\n                        'body-medium': newFontStyle && isNumber(amountAfterDiscount) && amountAfterDiscount === amount,\n                        'body-regular': newFontStyle && isNumber(amountAfterDiscount) && amountAfterDiscount !== amount,\n                    })}\n                    data-test=\"cart-item-product-price\"\n                >\n                    <ShopperCurrency amount={amount} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default memo(OrderSummaryItem);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown, IconChevronUp } from '../ui/icon';\nimport { isSmallScreen } from '../ui/responsive';\n\nimport getItemsCount from './getItemsCount';\nimport mapFromCustom from './mapFromCustom';\nimport mapFromDigital from './mapFromDigital';\nimport mapFromGiftCertificate from './mapFromGiftCertificate';\nimport mapFromPhysical from './mapFromPhysical';\nimport OrderSummaryItem from './OrderSummaryItem';\n\nconst COLLAPSED_ITEMS_LIMIT = 4;\nconst COLLAPSED_ITEMS_LIMIT_SMALL_SCREEN = 3;\n\nexport interface OrderSummaryItemsProps {\n    displayLineItemsCount: boolean;\n    items: LineItemMap;\n    newFontStyle?: boolean;\n}\n\ninterface OrderSummaryItemsState {\n    isExpanded: boolean;\n    collapsedLimit: number;\n}\n\nclass OrderSummaryItems extends React.Component<OrderSummaryItemsProps, OrderSummaryItemsState> {\n    constructor(props: OrderSummaryItemsProps) {\n        super(props);\n\n        this.state = {\n            isExpanded: false,\n            collapsedLimit: this.getCollapsedLimit(),\n        };\n    }\n\n    render(): ReactNode {\n        const { displayLineItemsCount = true, items, newFontStyle = false } = this.props;\n        const { collapsedLimit, isExpanded } = this.state;\n\n        return (\n            <>\n                {displayLineItemsCount && <h3\n                    className={classNames('cart-section-heading optimizedCheckout-contentPrimary',\n                        { 'body-medium': newFontStyle })}\n                    data-test=\"cart-count-total\"\n                >\n                    <TranslatedString\n                        data={{ count: getItemsCount(items) }}\n                        id=\"cart.item_count_text\"\n                    />\n                </h3>}\n\n                <ul aria-live=\"polite\" className=\"productList\">\n                    {[\n                        ...items.physicalItems\n                            .slice()\n                            .sort((item) => item.variantId)\n                            .map(mapFromPhysical),\n                        ...items.giftCertificates.slice().map(mapFromGiftCertificate),\n                        ...items.digitalItems\n                            .slice()\n                            .sort((item) => item.variantId)\n                            .map(mapFromDigital),\n                        ...(items.customItems || []).map(mapFromCustom),\n                    ]\n                        .slice(0, isExpanded ? undefined : collapsedLimit)\n                        .map((summaryItemProps) => (\n                            <li className=\"productList-item is-visible\" key={summaryItemProps.id}>\n                                <OrderSummaryItem {...summaryItemProps} />\n                            </li>\n                        ))}\n                </ul>\n\n                {this.renderActions()}\n            </>\n        );\n    }\n\n    private getCollapsedLimit(): number {\n        return isSmallScreen() ? COLLAPSED_ITEMS_LIMIT_SMALL_SCREEN : COLLAPSED_ITEMS_LIMIT;\n    }\n\n    private renderActions(): ReactNode {\n        const { isExpanded } = this.state;\n\n        if (this.getLineItemCount() <= this.getCollapsedLimit()) {\n            return;\n        }\n\n        return (\n            <div className=\"cart-actions\">\n                <button\n                    className={classNames('button button--tertiary button--tiny optimizedCheckout-buttonSecondary',\n                        { 'sub-text-medium': this.props.newFontStyle })}\n                    onClick={this.handleToggle}\n                    type=\"button\"\n                >\n                    {isExpanded ? (\n                        <>\n                            <TranslatedString id=\"cart.see_less_action\" />\n                            <IconChevronUp />\n                        </>\n                    ) : (\n                        <>\n                            <TranslatedString id=\"cart.see_all_action\" />\n                            <IconChevronDown />\n                        </>\n                    )}\n                </button>\n            </div>\n        );\n    }\n\n    private getLineItemCount(): number {\n        const { items } = this.props;\n\n        return (\n            (items.customItems || []).length +\n            items.physicalItems.length +\n            items.digitalItems.length +\n            items.giftCertificates.length\n        );\n    }\n\n    private handleToggle: () => void = () => {\n        const { isExpanded } = this.state;\n\n        this.setState({ isExpanded: !isExpanded });\n    };\n}\n\nexport default OrderSummaryItems;\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function removeBundledItems(lineItems: LineItemMap): LineItemMap {\n    return {\n        ...lineItems,\n        physicalItems: lineItems.physicalItems.filter((item) => typeof item.parentId !== 'string'),\n        digitalItems: lineItems.digitalItems.filter((item) => typeof item.parentId !== 'string'),\n    };\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString, withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummaryTotalProps {\n    orderAmount: number;\n    shopperCurrencyCode: string;\n    storeCurrencyCode: string;\n}\n\nconst OrderSummaryTotal: FunctionComponent<OrderSummaryTotalProps & WithCurrencyProps> = ({\n    shopperCurrencyCode,\n    storeCurrencyCode,\n    orderAmount,\n    currency,\n}) => {\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\n    const label = (\n        <>\n            {hasDifferentCurrency ? (\n                <TranslatedString id=\"cart.estimated_total_text\" />\n            ) : (\n                <TranslatedString id=\"cart.total_text\" />\n            )}\n            {` (${shopperCurrencyCode})`}\n        </>\n    );\n\n    return (\n        <>\n            <OrderSummaryPrice\n                amount={orderAmount}\n                className=\"cart-priceItem--total\"\n                isOrderTotal\n                label={label}\n                superscript={hasDifferentCurrency ? '*' : undefined}\n                testId=\"cart-total\"\n            />\n            {hasDifferentCurrency && currency && (\n                <p className=\"cart-priceItem--totalNote\" data-test=\"cart-price-item-total-note\">\n                    <TranslatedString\n                        data={{\n                            total: currency.toStoreCurrency(orderAmount),\n                            code: storeCurrencyCode,\n                        }}\n                        id=\"cart.billed_amount_text\"\n                    />\n                </p>\n            )}\n        </>\n    );\n};\n\nexport default withCurrency(OrderSummaryTotal);\n","import React, { FunctionComponent } from 'react';\n\nconst IconGiftCertificate: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\" />\n    </svg>\n);\n\nexport default IconGiftCertificate;\n","import { SMALL_SCREEN_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isSmallScreen() {\n    query = window.matchMedia(`(max-width: ${SMALL_SCREEN_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import { Fee, OrderFee } from \"@bigcommerce/checkout-sdk\";\n\nexport default function isOrderFee(fee: OrderFee | Fee): fee is OrderFee {\n  return Object.hasOwn(fee, 'customerDisplayName');\n}\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { ShopperCurrency } from '../currency';\n\nimport OrderSummaryPrice, { OrderSummaryPriceProps } from './OrderSummaryPrice';\n\nexport interface OrderSummaryDiscountProps extends OrderSummaryPriceProps {\n    remaining?: number;\n    code?: string;\n    onRemoved?(code: string): void;\n}\n\nconst OrderSummaryDiscount: FunctionComponent<OrderSummaryDiscountProps> = ({\n    code,\n    remaining,\n    amount,\n    onRemoved,\n    ...rest\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    return (\n        <OrderSummaryPrice\n            {...rest}\n            {...(onRemoved && {\n                onActionTriggered: () => code && onRemoved(code),\n                actionLabel: <TranslatedString id=\"redeemable.remove_action\" />,\n            })}\n            amount={-1 * (amount || 0)}\n        >\n            {!!remaining && remaining > 0 && (\n                <span\n                    className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\n                    data-test=\"cart-price-remaining\"\n                >\n                    <TranslatedString id=\"cart.remaining_text\" />\n                    {': '}\n                    <ShopperCurrency amount={remaining} />\n                </span>\n            )}\n\n            {code && (\n                <span\n                    className={classNames('cart-priceItem-postFix optimizedCheckout-contentSecondary',\n                        { 'sub-text-medium': newFontStyle })}\n                    data-test=\"cart-price-code\"\n                >\n                    {code}\n                </span>\n            )}\n        </OrderSummaryPrice>\n    );\n}\n\nexport default memo(OrderSummaryDiscount);\n","import { Coupon, Fee, GiftCertificate, OrderFee, Tax } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport isOrderFee from \"./isOrderFee\";\nimport OrderSummaryDiscount from './OrderSummaryDiscount';\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummarySubtotalsProps {\n    coupons: Coupon[];\n    giftCertificates?: GiftCertificate[];\n    discountAmount?: number;\n    isTaxIncluded?: boolean;\n    taxes?: Tax[];\n    fees?: Fee[] | OrderFee[];\n    giftWrappingAmount?: number;\n    shippingAmount?: number;\n    shippingAmountBeforeDiscount?: number;\n    handlingAmount?: number;\n    storeCreditAmount?: number;\n    subtotalAmount: number;\n    onRemovedGiftCertificate?(code: string): void;\n    onRemovedCoupon?(code: string): void;\n}\n\nconst OrderSummarySubtotals: FunctionComponent<OrderSummarySubtotalsProps> = ({\n    discountAmount,\n    isTaxIncluded,\n    giftCertificates,\n    taxes,\n    fees,\n    giftWrappingAmount,\n    shippingAmount,\n    shippingAmountBeforeDiscount,\n    subtotalAmount,\n    handlingAmount,\n    storeCreditAmount,\n    coupons,\n    onRemovedGiftCertificate,\n    onRemovedCoupon,\n}) => {\n    return (\n        <>\n            <OrderSummaryPrice\n                amount={subtotalAmount}\n                className=\"cart-priceItem--subtotal\"\n                label={<TranslatedString id=\"cart.subtotal_text\" />}\n                testId=\"cart-subtotal\"\n            />\n\n            {(coupons || []).map((coupon, index) => (\n                <OrderSummaryDiscount\n                    amount={coupon.discountedAmount}\n                    code={coupon.code}\n                    key={index}\n                    label={coupon.displayName}\n                    onRemoved={onRemovedCoupon}\n                    testId=\"cart-coupon\"\n                />\n            ))}\n\n            {!!discountAmount && (\n                <OrderSummaryDiscount\n                    amount={discountAmount}\n                    label={<TranslatedString id=\"cart.discount_text\" />}\n                    testId=\"cart-discount\"\n                />\n            )}\n\n            {(giftCertificates || []).map((giftCertificate, index) => (\n                <OrderSummaryDiscount\n                    amount={giftCertificate.used}\n                    code={giftCertificate.code}\n                    key={index}\n                    label={<TranslatedString id=\"cart.gift_certificate_text\" />}\n                    onRemoved={onRemovedGiftCertificate}\n                    remaining={giftCertificate.remaining}\n                    testId=\"cart-gift-certificate\"\n                />\n            ))}\n\n            {!!giftWrappingAmount && (\n                <OrderSummaryPrice\n                    amount={giftWrappingAmount}\n                    label={<TranslatedString id=\"cart.gift_wrapping_text\" />}\n                    testId=\"cart-gift-wrapping\"\n                />\n            )}\n\n            <OrderSummaryPrice\n                amount={shippingAmount}\n                amountBeforeDiscount={shippingAmountBeforeDiscount}\n                label={<TranslatedString id=\"cart.shipping_text\" />}\n                testId=\"cart-shipping\"\n                zeroLabel={<TranslatedString id=\"cart.free_text\" />}\n            />\n\n            {!!handlingAmount && (\n                <OrderSummaryPrice\n                    amount={handlingAmount}\n                    label={<TranslatedString id=\"cart.handling_text\" />}\n                    testId=\"cart-handling\"\n                />\n            )}\n\n            {fees?.map((fee, index) => (\n                <OrderSummaryPrice\n                    amount={fee.cost}\n                    key={index}\n                    label={isOrderFee(fee) ? fee.customerDisplayName : fee.displayName}\n                    testId=\"cart-fees\"\n                />\n            ))}\n\n            {!isTaxIncluded && (taxes || []).map((tax, index) => (\n                <OrderSummaryPrice\n                    amount={tax.amount}\n                    key={index}\n                    label={tax.name}\n                    testId=\"cart-taxes\"\n                />\n            ))}\n\n            {!!storeCreditAmount && (\n                <OrderSummaryDiscount\n                    amount={storeCreditAmount}\n                    label={<TranslatedString id=\"cart.store_credit_text\" />}\n                    testId=\"cart-store-credit\"\n                />\n            )}\n        </>\n    );\n};\n\nexport default memo(OrderSummarySubtotals);\n","import React, { FunctionComponent } from 'react';\n\nconst OrderSummarySection: FunctionComponent<{ children?: React.ReactNode }> = ({ children }) => (\n    <section className=\"cart-section optimizedCheckout-orderSummary-cartSection\">\n        {children}\n    </section>\n);\n\nexport default OrderSummarySection;\n","import classNames from 'classnames';\nimport React, { FC, ReactNode, useCallback, useEffect, useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { useCheckout , useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryPriceProps {\n    children?: ReactNode;\n    label: ReactNode;\n    amount?: number | null;\n    amountBeforeDiscount?: number;\n    zeroLabel?: ReactNode;\n    className?: string;\n    testId?: string;\n    currencyCode?: string;\n    superscript?: string;\n    actionLabel?: ReactNode;\n    onActionTriggered?(): void;\n    isOrderTotal?: boolean;\n}\n\nexport interface OrderSummaryPriceState {\n    highlight: boolean;\n    previousAmount?: number;\n}\n\nfunction getDisplayValue(amount?: number | null, zeroLabel?: ReactNode): ReactNode | number {\n    const notYetSetSymbol = '--';\n\n    if (typeof amount === 'undefined' || amount === null) {\n        return notYetSetSymbol;\n    }\n\n    if (zeroLabel && amount === 0) {\n        return zeroLabel;\n    }\n\n    return amount;\n}\n\nfunction isNumberValue(displayValue: number | ReactNode): displayValue is number {\n    return typeof displayValue === 'number';\n}\n\nconst OrderSummaryPrice: FC<OrderSummaryPriceProps> = ({\n    amount,\n    amountBeforeDiscount,\n    actionLabel,\n    onActionTriggered,\n    children,\n    className,\n    currencyCode,\n    label,\n    superscript,\n    testId,\n    zeroLabel,\n    isOrderTotal = false,\n}) => {\n    const [ highlight, setHighlight ] = useState<boolean>(false);\n    const [ previousAmount, setPreviousAmount ] = useState<OrderSummaryPriceProps['amount']>(amount);\n    const {\n        checkoutState: {\n            statuses: { isSubmittingOrder }\n        }\n    } = useCheckout();\n\n    const { newFontStyle } = useStyleContext();\n    const displayValue = getDisplayValue(amount, zeroLabel);\n    const isActionDisabled = isSubmittingOrder();\n\n    useEffect(() => {\n        setHighlight(amount !== previousAmount);\n        setPreviousAmount(amount);\n    }, [ amount ]);\n\n    const handleTransitionEnd: (node: HTMLElement, done: () => void) => void = useCallback((node, done) => {\n        node.addEventListener('animationend', ({ target }) => {\n            if (target === node) {\n                setHighlight(false);\n                done();\n            }\n        });\n    }, [ setHighlight ]);\n\n    const handleActionTrigger = () => {\n        if (isActionDisabled || !onActionTriggered) {\n            return;\n        }\n\n        onActionTriggered();\n    }\n\n    return (\n        <div data-test={testId}>\n            <CSSTransition\n                addEndListener={handleTransitionEnd}\n                classNames=\"changeHighlight\"\n                in={highlight}\n                timeout={{}}\n            >\n                <div\n                    aria-live=\"polite\"\n                    className={classNames(\n                        'cart-priceItem',\n                        'optimizedCheckout-contentPrimary',\n                        className,\n                    )}\n                >\n                    <span className={classNames('cart-priceItem-label',\n                        {\n                            'body-regular': newFontStyle && !isOrderTotal,\n                            'sub-header': newFontStyle && isOrderTotal\n                        })}\n                    >\n                        <span data-test=\"cart-price-label\">\n                            {label}\n                            {'  '}\n                        </span>\n                        {currencyCode && (\n                            <span className=\"cart-priceItem-currencyCode\">\n                                {`(${currencyCode}) `}\n                            </span>\n                        )}\n                        {onActionTriggered && actionLabel && (\n                            <span className=\"cart-priceItem-link\">\n                                <a\n                                    className={classNames({\n                                        'link--disabled': isActionDisabled,\n                                        'body-cta': newFontStyle && !isOrderTotal\n                                    })}\n                                    data-test=\"cart-price-callback\"\n                                    href=\"#\"\n                                    onClick={preventDefault(handleActionTrigger)}\n                                >\n                                    {actionLabel}\n                                </a>\n                            </span>\n                        )}\n                    </span>\n\n                    <span className={classNames('cart-priceItem-value',\n                        {\n                            'body-medium': newFontStyle && !isOrderTotal,\n                            'header': newFontStyle && isOrderTotal\n                        })}\n                    >\n                        {isNumberValue(amountBeforeDiscount) && amountBeforeDiscount !== amount && (\n                            <span className=\"cart-priceItem-before-value\">\n                                <ShopperCurrency amount={amountBeforeDiscount} />\n                            </span>\n                        )}\n\n                        <span data-test=\"cart-price-value\">\n                            {isNumberValue(displayValue) ? (\n                                <ShopperCurrency amount={displayValue} />\n                            ) : (\n                                displayValue\n                            )}\n                        </span>\n\n                        {superscript && (\n                            <sup data-test=\"cart-price-value-superscript\">{superscript}</sup>\n                        )}\n                    </span>\n\n                    {children}\n                </div>\n            </CSSTransition>\n        </div>\n    );\n};\n\nexport default OrderSummaryPrice;\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    const totalItemsCount = [...physicalItems, ...digitalItems, ...(customItems || [])].reduce(\n        (total, item) => (total += item.quantity),\n        0,\n    );\n\n    return totalItemsCount + giftCertificates.length;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronUp: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronUp);\n"],"names":["item","id","quantity","amount","extendedListPrice","name","getOrderSummaryItemImage","imageUrl","alt","src","getDigitalItemDescription","downloadPageUrl","testId","content","href","rel","target","TranslatedString","extendedComparisonPrice","amountAfterDiscount","extendedSalePrice","image","productOptions","options","map","option","value","className","IconGiftCertificate","description","giftWrapping","undefined","memo","newFontStyle","length","index","key","isNumber","ShopperCurrency","props","handleToggle","isExpanded","state","setState","collapsedLimit","getCollapsedLimit","render","this","displayLineItemsCount","items","data","count","getItemsCount","physicalItems","slice","sort","variantId","giftCertificates","digitalItems","customItems","summaryItemProps","renderActions","isSmallScreen","getLineItemCount","onClick","type","IconChevronUp","IconChevronDown","removeBundledItems","lineItems","filter","parentId","shopperCurrencyCode","storeCurrencyCode","orderAmount","currency","hasDifferentCurrency","label","isOrderTotal","superscript","total","toStoreCurrency","code","height","viewBox","width","xmlns","d","window","matchMedia","matches","isOrderFee","fee","Object","hasOwn","remaining","onRemoved","rest","OrderSummaryPrice","onActionTriggered","actionLabel","discountAmount","isTaxIncluded","taxes","fees","giftWrappingAmount","shippingAmount","shippingAmountBeforeDiscount","subtotalAmount","handlingAmount","storeCreditAmount","coupons","onRemovedGiftCertificate","onRemovedCoupon","coupon","discountedAmount","displayName","giftCertificate","used","amountBeforeDiscount","zeroLabel","cost","customerDisplayName","tax","children","isNumberValue","displayValue","currencyCode","useState","highlight","setHighlight","previousAmount","setPreviousAmount","isSubmittingOrder","getDisplayValue","isActionDisabled","useEffect","handleTransitionEnd","useCallback","node","done","addEventListener","addEndListener","classNames","in","timeout","reduce"],"sourceRoot":""}